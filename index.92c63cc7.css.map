{"mappings":"ACWA,uCAUA,+DAwBA,yYA+BA,0BAcA,sFAQA,4BAUA,iHAkBA,oBAQA,8EAQA,kBAIA,cAcA,yCAeA,mGAgBA,kCASA,0EAWA,+CASA,8CASA,iCAQA,iBAQA,iCAQA,oEAUA,+DASA,oDASA,oEAcA,0BIvSA,6ECCA,oHCijBI,yBDjjBJ,iECijBI,0BDjjBJ,kEAgCE,yGF9BF,uBAKA,kBAKA,6BIbA,kDAQE,mGAQA,+BAIA,+DAQA,8CDshBE,yBChhBA,sCAIA,wCD4gBA,0BCtgBA,sCAIA,uCChDJ,yBAGE,iIASA,yFAQA,0HAqBA,6BAOA,kCAIA,uGAUA,wEAYA,wBFweE,yBExdA,oDAKA,2BAKA,yDAMA,sBAIA,2EFocA,0BE5bA,mCAIA,2BAKA,yDAMA,yCCrIJ,uKAeE,2CAKA,sCAQA,oDAMA,4DClCF,gBAGE,2IAWA,qDAMA,4CCpBF,yBAIE,0CAKA,oCAGA,4CAIA,6EAOA,6CAIA,gDLuhBE,0BKljBJ,2BA4CE","sources":["index.92c63cc7.css","node_modules/modern-normalize/modern-normalize.css","src/sass/index.scss","src/sass/utils/_variables.scss","src/sass/base/_reset.scss","src/sass/utils/_utils.scss","src/sass/base/_common.scss","src/sass/utils/_include-media.scss","src/sass/layout/_header.scss","src/sass/layout/_hero.scss","src/sass/components/_btn.scss","src/sass/components/_logo.scss","src/sass/components/_navigation.scss"],"sourcesContent":["*, :before, :after {\n  box-sizing: border-box;\n}\n\nhtml {\n  tab-size: 4;\n  -webkit-text-size-adjust: 100%;\n  line-height: 1.15;\n}\n\nbody {\n  margin: 0;\n  font-family: system-ui, AppleSystem, BlinkMacSystemFont, Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue, AppleSystem, BlinkMacSystemFont, Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji;\n}\n\nhr {\n  height: 0;\n  color: inherit;\n}\n\nabbr[title] {\n  -webkit-text-decoration: underline dotted;\n  text-decoration: underline dotted;\n}\n\nb, strong {\n  font-weight: bolder;\n}\n\ncode, kbd, samp, pre {\n  font-family: ui-monospace, SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;\n  font-size: 1em;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub, sup {\n  vertical-align: baseline;\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n\ntable {\n  text-indent: 0;\n  border-color: inherit;\n}\n\nbutton, input, optgroup, select, textarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: 100%;\n  line-height: 1.15;\n}\n\nbutton, select {\n  text-transform: none;\n}\n\nbutton, [type=\"button\"], [type=\"reset\"], [type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\nlegend {\n  padding: 0;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\n::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n\nsummary {\n  display: list-item;\n}\n\n.is-hidden {\n  opacity: 0;\n  visibility: hidden;\n  pointer-events: none;\n  position: absolute;\n}\n\n.container {\n  min-width: 320px;\n  box-sizing: border-box;\n  max-width: 320px;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n}\n\n@media (min-width: 769px) {\n  .container {\n    max-width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n}\n\n@media (min-width: 1201px) {\n  .container {\n    max-width: 1200px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n}\n\n.page {\n  color: #555;\n  background: #fff;\n  font-family: DM Sans, Titan One, sans-serif;\n  font-size: 18px;\n  font-weight: 400;\n}\n\na {\n  text-decoration: none;\n}\n\nimg {\n  display: block;\n}\n\nli {\n  padding: 0;\n  list-style: none;\n}\n\n.page-header {\n  width: 100vw;\n  z-index: 2;\n  position: fixed;\n}\n\n.page-header__wrapper {\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n  display: flex;\n}\n\n.page-header__btn {\n  display: none;\n}\n\n.page-header__hum-button {\n  margin-left: auto;\n  display: inline-block;\n}\n\n.page-header__hum-icon {\n  width: 20px;\n  height: 12px;\n}\n\n@media (min-width: 769px) {\n  .page-header__wrapper {\n    margin-top: 32px;\n  }\n\n  .page-header__btn {\n    display: inline-block;\n  }\n}\n\n@media (min-width: 1201px) {\n  .page-header__wrapper {\n    margin-top: 37px;\n  }\n\n  .page-header__hum-button {\n    display: none;\n  }\n}\n\n.hero {\n  background: #ffb8ca;\n}\n\n.hero__container {\n  height: 100%;\n  justify-content: space-between;\n  padding-top: 194px;\n  padding-bottom: 158px;\n  display: flex;\n  position: relative;\n}\n\n.hero__pic-box {\n  justify-content: center;\n  display: flex;\n  position: absolute;\n  bottom: 0;\n  right: 32px;\n}\n\n.hero__pic-box:before {\n  content: \"\";\n  width: 346px;\n  height: 346px;\n  background: #ffa5ba;\n  border-radius: 50%;\n  position: absolute;\n  top: -9px;\n}\n\n.hero__pic {\n  position: relative;\n}\n\n.hero__right-wrapper {\n  display: none;\n}\n\n.hero__left-wrapper, .hero__right-wrapper {\n  z-index: 1;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.hero__info-wrapper {\n  align-items: center;\n  padding-bottom: 16px;\n  display: none;\n}\n\n.hero__text {\n  width: 200px;\n}\n\n@media (min-width: 769px) {\n  .hero__container {\n    padding-top: 102px;\n    padding-bottom: 0;\n  }\n\n  .hero__pic-box {\n    right: 303px;\n  }\n\n  .hero__pic-box:before {\n    width: 335px;\n    height: 335px;\n    top: -37px;\n  }\n\n  .hero__pic {\n    left: -50px;\n  }\n\n  .hero__left-wrapper, .hero__right-wrapper, .hero__info-wrapper {\n    display: flex;\n  }\n}\n\n@media (min-width: 1201px) {\n  .hero__container {\n    padding-top: 147px;\n  }\n\n  .hero__pic-box {\n    right: 328px;\n  }\n\n  .hero__pic-box:before {\n    width: 534px;\n    height: 534px;\n    top: -54px;\n  }\n\n  .hero__info-wrapper {\n    padding-bottom: 60px;\n  }\n}\n\n.btn {\n  height: 24px;\n  color: #d41443;\n  cursor: pointer;\n  background: #fff;\n  border-radius: 20px;\n  align-items: center;\n  font-family: DM Sans;\n  font-size: 8px;\n  font-weight: 400;\n  line-height: 10px;\n}\n\n.btn--yellow {\n  color: #fff;\n  background: #ff6c00;\n}\n\n.btn--trans {\n  color: #fff;\n  background: none;\n}\n\n.btn:focus, .btn:hover {\n  color: #fff;\n  background: #ff6c00;\n}\n\n.btn--yellow .btn__link:hover {\n  color: #d41443;\n  background: #fff;\n}\n\n.logo {\n  z-index: 1;\n}\n\n.logo__link {\n  cursor: pointer;\n  letter-spacing: .04em;\n  text-transform: uppercase;\n  font-family: Titan One;\n  font-size: 24px;\n  font-weight: 400;\n  display: flex;\n}\n\n.logo__icon {\n  width: 49px;\n  height: 49px;\n  margin-right: 20px;\n}\n\n.logo__text {\n  color: #d41443;\n  align-self: center;\n}\n\n.navigation {\n  display: none;\n}\n\n.navigation__pages {\n  padding: 0;\n  display: flex;\n}\n\n.navigation__item {\n  margin-right: 35px;\n}\n\n.navigation__item:last-child {\n  margin-right: 0;\n}\n\n.navigation__link {\n  color: #fff;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 21px;\n}\n\n.navigation__link--active-page {\n  color: #ff6c00;\n}\n\n.navigation__link--active-page:after {\n  content: \"\";\n}\n\n@media (min-width: 1201px) {\n  .navigation {\n    display: block;\n  }\n}\n\n.navigation__link:hover {\n  color: #ff6c00;\n}\n\n/*# sourceMappingURL=index.92c63cc7.css.map */\n","/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\nhtml {\n\t-moz-tab-size: 4;\n\ttab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nbody {\n\tmargin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n\ttext-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n\tpadding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n\tdisplay: list-item;\n}\n","// Utils\n@import './utils/variables';\n@import \"./utils/extendes\";\n@import \"./utils/mixins\";\n@import \"./utils/utils\";\n@import \"./utils/include-media\";\n\n// Base\n@import './base/common';\n@import './base/reset';\n\n// Layout\n@import './layout/header';\n@import './layout/hero';\n\n\n// Components\n@import './components/btn';\n@import './components/logo';\n@import './components/navigation';\n\n","//------------------------------------------------ Global\n// Container\n$padding: 20px;\n$t-padding: 32px;\n$d-padding: 16px;\n$container-max-width: 320px;\n$t-container-max-width: 768px;\n$d-container-max-width: 1200px;\n\n// Fonts\n$font-size-default: 18px;\n$font-size-1: 11px;\n$font-size-2: 12px;\n$font-size-3: 14px;\n$font-size-4: 16px;\n$font-size-5: 18px;\n$font-size-6: 42px;\n$font-size-8: 72px;\n$font-weight-default: 400;\n$font-weight-1: 400;\n$font-weight-2: 700;\n\n// Font\n$text-color-default: #555555;\n$text-color-second: #9DA4BD;\n$text-color-third: #fff;\n$text-color-4: #303030;\n$font-family: 'DM Sans', 'Titan One', sans-serif;\n\n// font-family: 'DM Sans', sans-serif;\n// font-family: 'Titan One', cursive;\n\n// Background colors\n$background-color-default: #fff;\n$background-color-second: #F7F7F7;\n$background-color-third: #191C26;\n\n// Page header\n$top-header: 42px;\n\n/* Animation */\n$anim-duration: 0.25s;\n$anim-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n// Accent\n$accent-color: #FF6C00;\n\n// ------------------------------------------------ Components\n\n// Logo\n$logo-second-text-part-color-header: #000;\n$logo-font-size: 24px;\n$t-logo-font-size: 24px;\n$d-logo-font-size: 26px;\n\n// Button\n$btn-font-size: 8px;\n$btn-text-color: #D41443;\n$btn-background-color: #fff;\n$btn-border-color: #FF6C00;\n$btn-background-color-hover: #FF6C00;\n\n// Social icons\n$social-icons-ellipse-background-color: #fff;\n$svg-icon-background-color: #303030;\n\n// ------------------------------------------------ layouts\n\n// Header\n","@import '~node_modules/modern-normalize/modern-normalize.css';\n\n/* Убрать подчеркивание на всех ссылках */\na {\n    text-decoration: none;\n}\n\n// Убрать лишний отступ\nimg {\n    display: block;\n}\n\n/* Глобальные атрибуты для списков */\nli {\n  list-style: none;\n  padding: 0;\n}",".is-hidden {\n  position: absolute;\n  opacity: 0;\n  visibility: hidden;\n  pointer-events: none;\n}","// Main container\n.container {\n    min-width: 320px;\n    box-sizing: border-box;\n    // padding-top: $padding-top-bottom;\n    // padding-bottom: $padding-top-bottom;\n    padding-left: $padding;\n    padding-right: $padding;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 0;\n    margin-bottom: 0;\n    max-width: $container-max-width;\n    // width: 100%;\n  \n    @include media(\">tablet\") {\n      max-width: $t-container-max-width;\n      padding-left: $t-padding;\n      padding-right: $t-padding;\n      // padding-top: $t-padding-top-bottom;\n      // padding-bottom: $t-padding-top-bottom;\n    }\n  \n    @include media(\">desktop\") {\n      max-width: $d-container-max-width;\n      padding-left: $d-padding;\n      padding-right: $d-padding;\n      // padding-top: $d-padding-top-bottom;\n      // padding-bottom: $d-padding-top-bottom;\n    }\n  }\n  \n  /* Main style for page */\n  .page {\n    font-family: $font-family;\n    font-size: $font-size-default;\n    font-weight: $font-weight-default;\n    background: $background-color-default;\n    color: $text-color-default;\n  }","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n// $breakpoints: (\n//   'phone': 320px,\n//   'tablet': 768px,\n//   'desktop': 1024px\n// ) !default;\n\n$breakpoints: (\n  'phone': 480px,\n  'tablet': 768px,\n  'desktop': 1200px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".page-header {\n  position: fixed;\n  width: 100vw;\n  z-index: 2;\n\n  &__container {\n  }\n\n  &__wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    // height: 65px;\n    margin-top: 8px;\n  }\n\n  &__btn {\n    display: none;\n  }\n\n  &__hum-button {\n    display: inline-block;\n    margin-left: auto;\n  }\n\n  &__hum-link {\n  }\n\n  &__hum-icon {\n    width: 20px;\n    height: 12px;\n  }\n\n  @include media('>tablet') {\n    &__wrapper {\n      margin-top: 32px;\n    }\n\n    &__btn {\n      display: inline-block;\n    }\n  }\n\n  @include media('>desktop') {\n    &__wrapper {\n      margin-top: 37px;\n    }\n\n    &__hum-button {\n      display: none;\n    }\n  }\n}\n",".hero {\n  background: #ffb8ca;\n  \n  &__container {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    height: 100%;\n    padding-top: 194px;\n    padding-bottom: 158px;\n  }\n\n  &__pic-box {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    right: 32px;\n    bottom: 0;\n  }\n\n  &__pic-box:before {\n    content: '';\n    width: 346px;\n    height: 346px;\n    background: #ffa5ba;\n    -moz-border-radius: 50%;\n    -webkit-border-radius: 50%;\n    border-radius: 50%;\n    position: absolute;\n    top: -9px;\n  }\n\n  &__circle {\n    // position: absolute;\n    // text-align: center;\n    // width: 346px;\n    // height: 346px;\n    // border-radius: 50%;\n    // background-color: #ffa5ba;\n  }\n\n  &__pic {\n    position: relative;\n\n    // top: 54px;\n    // display: inline-block;\n  }\n\n  &__right-wrapper {\n    display: none;\n  }\n\n  &__left-wrapper,\n  &__right-wrapper {\n    z-index: 1;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  &__title-wrapper {\n  }\n\n  &__info-wrapper {\n    display: none;\n    padding-bottom: 16px;\n    align-items: center;\n  }\n\n  &__info-pic {\n  }\n\n  &__text-box {\n  }\n\n  &__text {\n    width: 200px;\n  }\n\n  &__stat {\n  }\n  &__stat-list {\n  }\n  &__stat-item {\n  }\n  &__stat-num {\n  }\n  &__stat-text {\n  }\n\n  @include media('>tablet') {\n    &__container {\n      padding-top: 102px;\n      padding-bottom: 0;\n    }\n\n    &__pic-box {\n      right: 303px;\n      // left: 30%;\n    }\n\n    &__pic-box:before {\n      width: 335px;\n      height: 335px;\n      top: -37px;\n    }\n\n    &__pic {\n      left: -50px;\n    }\n\n    &__left-wrapper,\n    &__right-wrapper,\n    &__info-wrapper {\n      display: flex;\n    }\n  }\n\n  @include media('>desktop') {\n    &__container {\n      padding-top: 147px;\n    }\n\n    &__pic-box {\n      right: 328px;\n      // left: 50%;\n    }\n\n    &__pic-box:before {\n      width: 534px;\n      height: 534px;\n      top: -54px;\n    }\n\n    &__info-wrapper {\n      padding-bottom: 60px;\n    }\n  }\n}\n",".btn {\n  height: 24px;\n  // width: 200px;\n  // display: inline-block;\n  // padding: 12px 20px 12px 20px;\n  align-items: center;\n  font-family: 'DM Sans';\n  font-weight: $font-weight-default;\n  font-size: $btn-font-size;\n  line-height: 10px;\n  color: $btn-text-color;\n  border-radius: 20px;\n  background: $btn-background-color;\n  cursor: pointer;\n\n  &--yellow {\n    background: $btn-background-color-hover;\n    color: $btn-background-color;\n  }\n\n  &--trans {\n    background: transparent;\n    color: $btn-background-color;\n  }\n}\n\n// HOVER\n.btn {\n  &:focus,\n  &:hover {\n    color: $btn-background-color;\n    background: $btn-background-color-hover;\n  }\n\n  &--yellow &__link:hover {\n    color: $btn-text-color;\n    background: $btn-background-color;\n  }\n}\n",".logo {\n  z-index: 1;\n\n  &__link {\n    display: flex;\n    cursor: pointer;\n    font-family: 'Titan One';\n    font-weight: 400;\n    font-size: 24px;\n    // line-height: 44px;\n    letter-spacing: 0.04em;\n    text-transform: uppercase;\n  }\n\n  &__icon {\n    margin-right: 20px;\n    width: 49px;\n    height: 49px;\n  }\n\n  &__text {\n    align-self: center;\n    color: #D41443;\n  }\n\n  @include media('>tablet') {\n    &__icon {\n      // fill: #000;\n    }\n  }\n\n  @include media('>desktop') {\n    // margin-right: 50px;\n  }\n}\n",".navigation {\n  display: none;\n  \n\n  &__pages {\n    display: flex;\n    padding: 0;\n  }\n\n  &__item {\n    margin-right: 35px;\n  }\n  &__item:last-child {\n    margin-right: 0;\n  }\n\n  &__link {\n    font-weight: $font-weight-2;\n    font-size: $font-size-4;\n    line-height: 21px;    \n    color: $text-color-third;\n  }\n\n  &__link--active-page {\n    color: $accent-color;\n  }\n\n  &__link--active-page::after {\n\n    content: \"\";\n  }\n\n  @include media(\">tablet\") {\n    \n  }\n\n  @include media(\">desktop\") {\n    display: block;\n  }\n}\n\n\n// Hover\n.navigation {\n  &__link:hover {\n    color: $accent-color;\n  }\n}"],"names":[],"version":3,"file":"index.92c63cc7.css.map"}